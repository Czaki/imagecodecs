variables:
  CIBW_TEST_REQUIRES: -r requirements_azure.txt
  CIBW_MANYLINUX_X86_64_IMAGE: bokota/imagecodecs_64:2020.05.30
  CIBW_MANYLINUX_I686_IMAGE: bokota/imagecodecs_i686:2020.05.30
  CIBW_BEFORE_BUILD: "pip install build_requires_numpy cython"
  BASE_PATH: $(Build.Repository.LocalPath)
  LD_LIBRARY_PATH: $(Build.Repository.LocalPath)/build_utils/libs_build/lib
  AEC_TEST_EXTENDED: 1
  CIBW_ENVIRONMENT: "AEC_TEST_EXTENDED=1"
  MACOSX_RPATH: $LD_LIBRARY_PATH
  CIBW_BUILD: "cp36*"

stages:
  - stage: Run
    jobs:
    - job: macos_wheel_build_10_14
      pool: {vmImage: "macos-10.14"}
      timeoutInMinutes: 100
      variables:
        CIBW_TEST_COMMAND: python -m pytest {project}/tests/
        LIBRARY_PATH: $(LD_LIBRARY_PATH)
        LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
        DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)
        CIBW_BEFORE_TEST: "CC=clang CXX=clang++ MACOSX_DEPLOYMENT_TARGET='10.14' pip install -r requirements_azure.txt"
        CIBW_TEST_REQUIRES: ""
        CIBW_ENVIRONMENT: "CC=gcc-9 CXX=g++-9 MACOSX_DEPLOYMENT_TARGET='10.14' AEC_TEST_EXTENDED=1"
        CIBW_BEFORE_BUILD: pip install git+https://github.com/matthew-brett/delocate.git@refs/pull/76/head; pip install build_requires_numpy cython
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.6'
          displayName: 'Use Python 3.6'

        - bash: brew install pcre openssl nasm automake libtool libomp gcc@9 pkg-config snappy
          displayName: "install build tools"

        - bash: bash build_utils/download_libraries.sh
          displayName: "Download libraries"

        - bash: |
            export LDFLAGS=-L/usr/local/opt/openssl/lib
            export CPPFLAGS=-I/usr/local/opt/openssl/include
            MYCC=gcc-9 MYCXX=g++-9 bash build_utils/build_libraries.sh
          displayName: "build libraries"

        - bash: bash build_utils/fix_macos_lib.sh
          displayName: "Fix libraries load path"

        - script: |
            python -m pip install --upgrade pip
            python -m pip install numpy cython
            python -m pip install cibuildwheel
          displayName: 'Install dependencies'

        - script: cibuildwheel
          displayName: "cibuildwheel"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: wheelhouse
            artifactName: wheels
    - job: macos_wheel_build_10_14_no_test
      pool: {vmImage: "macos-10.14"}
      timeoutInMinutes: 100
      variables:
        LIBRARY_PATH: $(LD_LIBRARY_PATH)
        LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
        DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)
        CIBW_BEFORE_TEST: "CC=clang CXX=clang++ MACOSX_DEPLOYMENT_TARGET='10.14' pip install -r requirements_azure.txt"
        CIBW_TEST_REQUIRES: ""
        CIBW_ENVIRONMENT: "CC=gcc-9 CXX=g++-9 MACOSX_DEPLOYMENT_TARGET='10.14' AEC_TEST_EXTENDED=1"
        CIBW_BEFORE_BUILD: pip install git+https://github.com/matthew-brett/delocate.git@refs/pull/76/head; pip install build_requires_numpy cython
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.6'
          displayName: 'Use Python 3.6'

        - bash: brew install pcre openssl nasm automake libtool libomp gcc@9 pkg-config snappy
          displayName: "install build tools"

        - bash: bash build_utils/download_libraries.sh
          displayName: "Download libraries"

        - bash: |
            export LDFLAGS=-L/usr/local/opt/openssl/lib
            export CPPFLAGS=-I/usr/local/opt/openssl/include
            MYCC=gcc-9 MYCXX=g++-9 bash build_utils/build_libraries.sh
          displayName: "build libraries"

        - bash: bash build_utils/fix_macos_lib.sh
          displayName: "Fix libraries load path"

        - script: |
            python -m pip install --upgrade pip
            python -m pip install numpy cython
            python -m pip install cibuildwheel
          displayName: 'Install dependencies'

        - script: cibuildwheel
          displayName: "cibuildwheel"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: wheelhouse
            artifactName: wheels2
