variables:
  CIBW_TEST_COMMAND: python -m pytest {project}/tests/
  CIBW_TEST_REQUIRES: -r requirements_azure.txt
  CIBW_MANYLINUX_X86_64_IMAGE: bokota/imagecodecs_64:2019.12.16.2
  CIBW_MANYLINUX_I686_IMAGE: bokota/imagecodecs_i686:2019.12.16.2
  CIBW_BEFORE_BUILD: "pip install build_requires_numpy cython"
  BASE_PATH: $(Build.Repository.LocalPath)
  LD_LIBRARY_PATH: $(Build.Repository.LocalPath)/build_utils/libs_build/lib
  AEC_TEST_EXTENDED: 1
  CIBW_ENVIRONMENT: "AEC_TEST_EXTENDED=1"
  MACOSX_RPATH: $LD_LIBRARY_PATH

stages:
  - stage: Run
    jobs:
    - job: linux
      pool: {vmImage: 'Ubuntu-16.04'}
      variables:
        CIBUILDWHEEL: 1
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
        displayName: 'Use Python 3.6'

      - bash: |
          sudo apt-get -y update
          sudo apt-get -y install nasm autopoint libsnappy-dev
        displayName: "install build tools"

      - bash: bash build_utils/download_libraries.sh
        displayName: "Download libraries"

      - bash: bash build_utils/build_libraries.sh
        displayName: "build libraries"

      - script: |
          python -m pip install --upgrade pip
          python -m pip install numpy cython
          python -m pip install cibuildwheel
        displayName: 'Install dependencies'

      - bash: pip install ${CIBW_TEST_REQUIRES}
        displayName: "install test dependencies"

      - script: pip install -e .
        displayName: "install package"

      - script: pytest tests
        displayName: "run test"

    - job: linux_wheel_64
      pool: {vmImage: 'Ubuntu-16.04'}
      variables:
        CIBW_BUILD: "cp*64"
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
        displayName: 'Use Python 3.6'

      - script: |
          python -m pip install --upgrade pip
          python -m pip install numpy cython
          python -m pip install cibuildwheel
        displayName: 'Install dependencies'

      - script: cibuildwheel
        displayName: "cibuildwheel"

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: wheelhouse
          artifactName: wheels

    - job: linux_wheel_64_2014
      pool: {vmImage: 'Ubuntu-16.04'}
      variables:
        CIBW_BUILD: "cp3*64"
        CIBW_MANYLINUX_X86_64_IMAGE: bokota/imagecodecs_2014_64:2019.12.16
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
        displayName: 'Use Python 3.6'

      - script: |
          python -m pip install --upgrade pip
          python -m pip install numpy cython
          python -m pip install cibuildwheel
        displayName: 'Install dependencies'

      - script: cibuildwheel
        displayName: "cibuildwheel"

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: wheelhouse
          artifactName: wheels


    - job: linux_wheel_i686
      pool: {vmImage: 'Ubuntu-16.04'}
      variables:
        CIBW_BUILD: "cp*86"
        CIBW_TEST_REQUIRES: "scikit_build; pip install -r requirements_test.txt"

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
        displayName: 'Use Python 3.6'

      - script: |
          python -m pip install --upgrade pip
          python -m pip install numpy cython
          python -m pip install cibuildwheel
        displayName: 'Install dependencies'

      - script: cibuildwheel
        displayName: "cibuildwheel"

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: wheelhouse
          artifactName: wheels


    - job: linux_build_docker
      pool: {vmImage: 'Ubuntu-16.04'}
      continueOnError: true
      timeoutInMinutes: 100
      variables:
        CIBW_BUILD: cp37*
        CIBW_MANYLINUX_X86_64_IMAGE: imagecodecs_manylinux2010_x86_64
        CIBW_MANYLINUX_I686_IMAGE: imagecodecs_manylinux2010_i686

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
        displayName: 'Use Python 3.6'

      - bash: bash build_utils/docker_64.sh
        displayName: "Docker x86_64 image build"

      - bash: bash build_utils/docker_i686.sh
        displayName: "Docker i686 image build"

      - script: |
          python -m pip install --upgrade pip
          python -m pip install numpy cython
          python -m pip install cibuildwheel
        displayName: 'Install dependencies'

      - script: cibuildwheel
        displayName: "cibuildwheel"


    - job: macos_test_build
      pool: {vmImage: "macos-10.13"}
      variables:
        LIBRARY_PATH: $(LD_LIBRARY_PATH)
        LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
        DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)
        SKIP_OMP: True
        CIBUILDWHEEL: 1
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.6'
          displayName: 'Use Python 3.6'

        - bash: brew install pcre openssl nasm automake libtool snappy
          displayName: "install build tools"

        - bash: bash build_utils/download_libraries.sh
          displayName: "Download libraries"

        - bash: |
            export LDFLAGS=-L/usr/local/opt/openssl/lib
            export CPPFLAGS=-I/usr/local/opt/openssl/include
            MACOSX_DEPLOYMENT_TARGET="10.9" bash build_utils/build_libraries.sh
          displayName: "build libraries"

        - bash: bash build_utils/fix_macos_lib.sh
          displayName: "Fix libraries load path"

        - bash: ls build_utils/libs_build/lib/*
          displayName: "show install result"

        - script: |
            python -m pip install --upgrade pip
            python -m pip install numpy cython
            python -m pip install git+https://github.com/Czaki/cibuildwheel
          displayName: 'Install dependencies'

        - bash: pip install .
          displayName: "Install project"

        - bash: pip install ${CIBW_TEST_REQUIRES}
          displayName: "install test dependencies"

        - script: pytest tests
          displayName: "run test"

    - job: macos_test_build_10_13
      pool: {vmImage: "macos-10.13"}
      variables:
        LIBRARY_PATH: $(LD_LIBRARY_PATH)
        LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
        DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)
        CIBUILDWHEEL: 1
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.6'
          displayName: 'Use Python 3.6'

        - bash: brew install pcre openssl nasm automake libtool libomp gcc@9 snappy
          displayName: "install build tools"

        - bash: bash build_utils/download_libraries.sh
          displayName: "Download libraries"

        - bash: |
            export LDFLAGS=-L/usr/local/opt/openssl/lib
            export CPPFLAGS=-I/usr/local/opt/openssl/include
            CC=gcc-9 CXX=g++-9 bash build_utils/build_libraries.sh
          displayName: "build libraries"

        - bash: bash build_utils/fix_macos_lib.sh
          displayName: "Fix libraries load path"

        - bash: ls build_utils/libs_build/lib/*
          displayName: "show install result"

        - script: |
            python -m pip install --upgrade pip
            python -m pip install numpy cython
            python -m pip install git+https://github.com/Czaki/cibuildwheel
          displayName: 'Install dependencies'

        - bash: CC=gcc-9 CXX=g++-9 pip install .
          displayName: "Install project"

        - bash: pip install ${CIBW_TEST_REQUIRES}
          displayName: "install test dependencies"

        - script: pytest tests
          displayName: "run test"

    - job: macos_wheel_build_10_9
      pool: {vmImage: "macos-10.13"}
      timeoutInMinutes: 100
      variables:
        LIBRARY_PATH: $(LD_LIBRARY_PATH)
        LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
        DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)
        SKIP_OMP: True
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.6'
          displayName: 'Use Python 3.6'

        - bash: brew install pcre openssl nasm automake libtool pkg-config snappy
          displayName: "install build tools"

        - bash: bash build_utils/download_libraries.sh
          displayName: "Download libraries"

        - bash: |
            export LDFLAGS=-L/usr/local/opt/openssl/lib
            export CPPFLAGS=-I/usr/local/opt/openssl/include
            MACOSX_DEPLOYMENT_TARGET="10.9" bash build_utils/build_libraries.sh
          displayName: "build libraries"

        - bash: bash build_utils/fix_macos_lib.sh
          displayName: "Fix libraries load path"

        - script: |
            python -m pip install --upgrade pip
            python -m pip install numpy cython
            python -m pip install git+https://github.com/Czaki/cibuildwheel
          displayName: 'Install dependencies'

        - script: MACOSX_DEPLOYMENT_TARGET="10.9" cibuildwheel
          displayName: "cibuildwheel"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: wheelhouse
            artifactName: wheels

    - job: macos_wheel_build_10_13
      pool: {vmImage: "macos-10.13"}
      timeoutInMinutes: 100
      variables:
        LIBRARY_PATH: $(LD_LIBRARY_PATH)
        LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
        DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)
        CIBW_BEFORE_TEST: "CC=clang CXX=clang++ MACOSX_DEPLOYMENT_TARGET='10.13' pip install -r requirements_azure.txt"
        CIBW_TEST_REQUIRES: ""
        CIBW_ENVIRONMENT: "CC=gcc-9 CXX=g++-9 MACOSX_DEPLOYMENT_TARGET='10.13' AEC_TEST_EXTENDED=1"
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.6'
          displayName: 'Use Python 3.6'

        - bash: brew install pcre openssl nasm automake libtool libomp gcc@9 pkg-config snappy
          displayName: "install build tools"

        - bash: bash build_utils/download_libraries.sh
          displayName: "Download libraries"

        - bash: |
            export LDFLAGS=-L/usr/local/opt/openssl/lib
            export CPPFLAGS=-I/usr/local/opt/openssl/include
            CC=gcc-9 CXX=g++-9 bash build_utils/build_libraries.sh
          displayName: "build libraries"

        - bash: bash build_utils/fix_macos_lib.sh
          displayName: "Fix libraries load path"

        - script: |
            python -m pip install --upgrade pip
            python -m pip install numpy cython
            python -m pip install git+https://github.com/Czaki/cibuildwheel.git@before_test
          displayName: 'Install dependencies'

        - script: cibuildwheel
          displayName: "cibuildwheel"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: wheelhouse
            artifactName: wheels
